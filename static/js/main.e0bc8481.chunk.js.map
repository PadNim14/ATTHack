{"version":3,"sources":["logo.svg","App.js","Quiz.js","reportWebVitals.js","Landing.js","Button.js","index.js"],"names":["App","Quiz","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","React","counter","setCounter","useRef","PP","setPP","useEffect","ms","timer","setInterval","nextQuestion","length","Promise","resolve","setTimeout","clearInterval","console","log","className","map","answerOption","index","onClick","handleAnswerButtonClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0bc8481.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Particles from \"react-tsparticles\";\r\n\r\nfunction App() {\r\n  return (\r\n   <div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Quiz() {\r\n\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n\tconst [showScore, setShowScore] = useState(false);\t\r\n\tconst [title, setTitle] = useState('')\r\n\t// <input onChange={event => setTitle(event.target.value)} />\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [counter, setCounter] = React.useState(5);\r\n\tconst id = React.useRef(null);\r\n\tconst [PP, setPP] = useState(0);\r\n\r\n\tconst clear=()=>{\r\n\t\twindow.clearInterval(id.current);\r\n\t}\r\n\t\r\n\tfunction sleep(ms){\r\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t}\r\n\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst timer =\r\n\t\t  counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n\t\t  if(counter === 0)\r\n\t\t  {\r\n\t\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\t\tif(nextQuestion < questions.length){\r\n\t\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\t\tsetCounter(counter + 5);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetShowScore(true);\r\n\t\t\t}\r\n\t\t\tsleep(2000);\r\n\t\t\t\r\n\t\t  }\r\n\t\t \r\n\t\treturn () => clearInterval(timer);\r\n\r\n\t\t\r\n\r\n\r\n\t  }, [counter]);\r\n\r\n\r\n\tconst handleAnswerButtonClick = (isCorrect) => {\r\n\t\tif(isCorrect){\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetPP(PP + 1);\r\n\t\t\tsetCounter(5);\r\n\t\t}\r\n\t\t\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif(nextQuestion < questions.length){\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\tsetCounter(5);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetShowScore(true);\r\n\t\t\tsetCounter(0);\r\n\t\t}\r\n\t\t//setCounter(5);\r\n\t};\r\n\t\r\n\tconsole.log(questions[currentQuestion]);\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='PPcounter'><p> Current PP: {PP}</p></div>\r\n\t  \t\t<div className='timer-text'>Time Left {counter}</div>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>You scored {score} out of {questions.length}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>{currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption, index) => (\r\n\t\t\t\t\t\t\t<button onClick={()=>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Quiz;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport './intro.css'\nclass Landing extends React.Component {\n  render() {\n    return (\n      <div>\n        <link rel=\"stylesheet\" href=\"intro.css\" />\n        <div className=\"context\">\n          <h1>Welcome to Gainbridge FieldHouse</h1>\n          <span>\n            <b>Powered by </b>Spectivity\n          </span>\n          <form>\n            <div className=\"floating-placeholder\">\n              <input type=\"text\" name=\"inputBox\" placeholder=\"Name\" />\n              {}\n            </div>\n            <div className=\"floating-placeholder\">\n              <input type=\"text\" name=\"inputBox\" placeholder=\"Seat Number\" />\n              {}\n            </div>\n            <div className=\"floating-placeholder\">\n              <input type=\"password\" name=\"inputBox\" placeholder=\"Password\" />\n              {}\n            </div>\n          </form>\n          <br />\n          <br />\n          <p>by Vaibhava, Sidd, Ishaan, Nimal</p>\n          <br />\n           {/* <form action=\"www.google.com\">\n            <input type=\"submit\" defaultValue=\"Press\" />\n          </form> */}\n          \n        </div>\n        <div className=\"area\">\n          <ul className=\"circles\">\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n          </ul>\n        </div>\n        <button onclick=\"window.location.href='www.google.com'\">Let's go</button> \n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <button onclick=\"window.location.href='https://w3docs.com'\">\n        Click Here\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Quiz from \"./Quiz\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Link } from 'react-router-dom';\r\nimport Landing from './Landing';\r\nimport Button from './Button';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Quiz />\r\n    {/* <App /> */}\r\n    {/* <Landing />\r\n    <Button /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}