{"version":3,"sources":["logo.svg","App.js","Quiz.js","reportWebVitals.js","Landing.js","Button.js","UserInput.js","index.js"],"names":["App","Quiz","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","React","counter","setCounter","useRef","PP","setPP","useEffect","ms","timer","setInterval","nextQuestion","length","Promise","resolve","setTimeout","clearInterval","nameText","document","getElementById","console","log","className","map","answerOption","index","onClick","handleAnswerButtonClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Component","ReactDOM","render","StrictMode"],"mappings":"yLAAe,I,kBCYAA,I,QCqIAC,MA9If,WAEC,IAAMC,EAAY,CACjB,CACCC,aAAc,8CAEdC,cAAe,CACd,CAAEC,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,KAGnC,CACCH,aAAc,0FACdC,cAAe,CACd,CAAEC,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,kBAAmBC,WAAW,GAC5C,CAAED,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,gBAAiBC,WAAW,KAG5C,CACCH,aAAc,+CACdC,cAAe,CACd,CAAEC,WAAY,kBAAmBC,WAAW,GAC5C,CAAED,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,gBAAiBC,WAAW,KAG5C,CACCH,aAAc,yDACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,cAAeC,WAAW,MAI3C,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwBJ,mBAAS,IAAjC,mBAMA,GANA,UAM0BA,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BC,IAAMP,SAAS,GAA7C,mBAAOQ,EAAP,KAAgBC,EAAhB,KAEA,GADWF,IAAMG,OAAO,MACJV,mBAAS,IAA7B,mBAAOW,EAAP,KAAWC,EAAX,KAYAL,IAAMM,WAAU,WACf,IAPcC,EAORC,EACJP,EAAU,GAAKQ,aAAY,kBAAMP,EAAWD,EAAU,KAAI,KAC1D,GAAe,IAAZA,EACH,CACD,IAAMS,EAAehB,EAAkB,EACpCgB,EAAetB,EAAUuB,QAC3BhB,EAAmBe,GACnBR,EAAWD,EAAU,IAGrBJ,GAAa,GAjBDU,EAmBP,IAlBA,IAAIK,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASN,MAsBlD,OAAO,kBAAMQ,cAAcP,MAKvB,CAACP,IAGN,IAmBIe,EAAWC,SAASC,eAAe,QAEvC,OADAC,QAAQC,IAAIJ,GAEX,sBAAKK,UAAU,MAAf,UAMC,qBAAKA,UAAU,YAAf,SAA2B,8CAAiBjB,OAC1C,sBAAKiB,UAAU,aAAf,uBAAuCpB,KACxCL,EACA,sBAAKyB,UAAU,gBAAf,wBAA2CvB,EAA3C,WAA0DV,EAAUuB,UAEpE,qCACC,sBAAKU,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,+BAAO3B,EAAkB,IAD1B,IACqCN,EAAUuB,UAG/C,qBAAKU,UAAU,gBAAf,SAAgCjC,EAAUM,GAAiBL,kBAE5D,qBAAKgC,UAAU,iBAAf,SACEjC,EAAUM,GAAiBJ,cAAcgC,KAAI,SAACC,EAAcC,GAAf,OAC7C,wBAAQC,QAAS,kBA3CS,SAACjC,GAC7BA,IACFO,EAASD,EAAQ,GACjBO,EAAMD,EAAK,GACXF,EAAW,IAGZ,IAAMQ,EAAehB,EAAkB,EAEpCgB,EAAetB,EAAUuB,QAC3BhB,EAAmBe,GACnBR,EAAW,KAGXL,GAAa,GACbK,EAAW,IA4BcwB,CAAwBH,EAAa/B,YAA1D,SAAuE+B,EAAahC,yBC5H5EoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCLQ5B,IAAMoC,UCAPpC,IAAMoC,U,OCDHpC,IAAMoC,UCW9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAMFtB,SAASC,eAAe,SAM1BS,K","file":"static/js/main.29addb63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Particles from \"react-tsparticles\";\r\n\r\nfunction App() {\r\n  return (\r\n   <div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\n// import './intro.html';\r\n\r\nfunction Quiz() {\r\n\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: ' What year were the Indiana Pacers founded?'\r\n\t\t\t,\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1967', isCorrect: true },\r\n\t\t\t\t{ answerText: '1985', isCorrect: false },\r\n\t\t\t\t{ answerText: '1958', isCorrect: false },\r\n\t\t\t\t{ answerText: '1976', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who once played for both the Indiana Pacers and the San Antonio Spurs in the same game?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'George Hill', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Stephen Jackson', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Kawhi Leonard', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Bob Netolicky', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Which Pacer was known as the \"Knick Killer\"?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'George McGinnis', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Alex English', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Chris Mullin', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Reggie Miller', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Which Pacers coach has the highest winning percentage?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Larry Bird', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bobby Leonard', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Larry Brown', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Frank Vogel', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\t\r\n\tconst [showScore, setShowScore] = useState(false);\t\r\n\tconst [name, setName] = useState('')\r\n\t\r\n\tconst handleInput = () => {\r\n\t\tconsole.log(name);\r\n\t};\r\n\t// <input onChange={event => setTitle(event.target.value)} />\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [counter, setCounter] = React.useState(4);\r\n\tconst id = React.useRef(null);\r\n\tconst [PP, setPP] = useState(0);\r\n\r\n\tconst clear=()=>{\r\n\t\twindow.clearInterval(id.current);\r\n\t}\r\n\t\r\n\tfunction sleep(ms){\r\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\r\n\t}\r\n\t\r\n\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst timer =\r\n\t\t  counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n\t\t  if(counter === 0)\r\n\t\t  {\r\n\t\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\t\tif(nextQuestion < questions.length){\r\n\t\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\t\tsetCounter(counter + 4);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetShowScore(true);\r\n\t\t\t}\r\n\t\t\tsleep(2000);\r\n\t\t\t\r\n\t\t  }\r\n\t\t \r\n\t\treturn () => clearInterval(timer);\r\n\r\n\t\t\r\n\r\n\r\n\t  }, [counter]);\r\n\r\n\r\n\tconst handleAnswerButtonClick = (isCorrect) => {\r\n\t\tif(isCorrect){\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetPP(PP + 1);\r\n\t\t\tsetCounter(4);\r\n\t\t}\r\n\t\t\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\t\r\n\t\tif(nextQuestion < questions.length){\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t\tsetCounter(4);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetShowScore(true);\r\n\t\t\tsetCounter(0);\r\n\t\t}\r\n\t\t//setCounter(5);\r\n\t};\r\n\tvar nameText = document.getElementById(\"name\");\r\n\tconsole.log(nameText);\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{/* <div style={{flexDirection: 'column', display: 'flex'}}>\r\n\t\t\t\t<input placeholder=\"username\" onChange={e=> setName(e.target.value)}/>\r\n\t\t\t<button onClick={() => handleInput()}>Input</button> */}\r\n\r\n\t\t\t{/* </div> */}\r\n\t\t\t<div className='PPcounter'><p> Current PP: {PP}</p></div>\r\n\t  \t\t<div className='timer-text'>Time Left {counter}</div>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>You scored {score} out of {questions.length}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>{currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption, index) => (\r\n\t\t\t\t\t\t\t<button onClick={()=>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Quiz;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport './intro.css'\nclass Landing extends React.Component {\n  render() {\n    return (\n      <div>\n        <link rel=\"stylesheet\" href=\"intro.css\" />\n        <div className=\"context\">\n          <h1>Welcome to Gainbridge FieldHouse</h1>\n          <span>\n            <b>Powered by </b>Spectivity\n          </span>\n          <form>\n            <div className=\"floating-placeholder\">\n              <input type=\"text\" name=\"inputBox\" placeholder=\"Name\" />\n              {}\n            </div>\n            <div className=\"floating-placeholder\">\n              <input type=\"text\" name=\"inputBox\" placeholder=\"Seat Number\" />\n              {}\n            </div>\n            <div className=\"floating-placeholder\">\n              <input type=\"password\" name=\"inputBox\" placeholder=\"Password\" />\n              {}\n            </div>\n          </form>\n          <br />\n          <br />\n          <p>by Vaibhava, Sidd, Ishaan, Nimal</p>\n          <br />\n           {/* <form action=\"www.google.com\">\n            <input type=\"submit\" defaultValue=\"Press\" />\n          </form> */}\n          \n        </div>\n        <div className=\"area\">\n          <ul className=\"circles\">\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n            <li />\n          </ul>\n        </div>\n        <button onclick=\"window.location.href='www.google.com'\">Let's go</button> \n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <button onclick=\"window.location.href='https://w3docs.com'\">\n        Click Here\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from \"react\";\r\nclass UserInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      alert('A name was submitted: ' + this.state.value);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  export default UserInput;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import './intro.css';\r\nimport App from './App';\r\nimport Quiz from \"./Quiz\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Link } from 'react-router-dom';\r\nimport Landing from './Landing';\r\nimport Button from './Button';\r\nimport UserInput from './UserInput'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Quiz />\r\n    {/* <App /> */}\r\n   {/* <Landing /> */}\r\n    {/* <Button /> \r\n    <UserInput /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}